name: Run E2E

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:

jobs:
  deploy:
    name: E2E
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 14.x
    strategy:
      matrix:
        python-version:
          - 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: run E2E
        run: pytest E2E
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SLACK_ALERTS_WEBHOOK: ${{ secrets.SLACK_ALERTS_WEBHOOK }}
          SLACK_REGISTER_WEBHOOK: ${{ secrets.SLACK_REGISTER_WEBHOOK }}
          S3_UPLOAD_AWS_ACCESS_KEY_ID: ${{ secrets.S3_UPLOAD_AWS_ACCESS_KEY_ID }}
          S3_UPLOAD_AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_UPLOAD_AWS_SECRET_ACCESS_KEY }}